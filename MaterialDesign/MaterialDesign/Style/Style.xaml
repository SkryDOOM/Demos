<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Style/Fonts.xaml"/>
        <ResourceDictionary Source="/Style/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Titlebar -->
    <Style x:Key="Titlebar" TargetType="{x:Type Label}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6BA2FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleExit" TargetType="{x:Type Label}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ColorNames -->
    <Style x:Key="ColorNameLabel" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="#455A64" />
        <Setter Property="BorderBrush" Value="#5E717A" />
        <Setter Property="Foreground" Value="{StaticResource LightFontColorBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="Margin" Value="0 0 2 0" />
        <Setter Property="Padding" Value="15 0 0 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Width" Value="150" />
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <!-- Primary Buttons -->
    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryColorBrush}"/>
    </Style>

    <!-- Unique TextBlock -->
    <Style x:Key="UniqueTextBlock" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="-1 0 0 0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Lato-SemiBold}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!-- Rounded border around boxes -->
    <Style x:Key="TextBoxBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkBoxColorBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="{StaticResource DarkBoxColorBrush}"/>
    </Style>

    <Style x:Key="ListViewFont" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>

                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.18" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected"/>
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.03" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Border x:Name="SelectedBorder"
                                    Opacity="0"
                                    Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1"/>
                                </Border.RenderTransform>
                            </Border>
                            <materialDesign:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Focusable="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Detailed Fonts -->
    <Style x:Key="DetailedFonts" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>
       
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightFontColorBrush}"/>
            </Trigger>

            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Background" Value="#a5d6a7"/>
            </DataTrigger>
            
        </Style.Triggers>
        
    </Style>
    
    <!-- Compare Fonts -->
    <Style x:Key="CompareFonts" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightFontColorBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- ListBox selected item-->
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>

        <Style.Triggers>

            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#616161" From="Transparent" Storyboard.TargetProperty="Background.Color"/>
                            <ThicknessAnimation Storyboard.TargetProperty="Padding" To="5" From="0" Duration="0:0:0.2" />                           
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="#616161" To="Transparent" Storyboard.TargetProperty="Background.Color"/>
                            <ThicknessAnimation Storyboard.TargetProperty="Padding" To="0" From="5" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>
</ResourceDictionary>