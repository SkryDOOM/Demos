<Page x:Class="EventAssistant.HomePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:EventAssistant"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:Converters="clr-namespace:EventAssistant.Converters"
      mc:Ignorable="d"
      xml:lang="en-IN"
      d:DesignWidth="900" d:DesignHeight="500">

    <Page.Resources>

        <Storyboard x:Key="OpenEvent">
            
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="AddStack">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>

        <Storyboard x:Key="CloseEvent">

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="TodayEvents">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>

        <ObjectDataProvider x:Key="enumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Priority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Page.Resources>

    <Page.Triggers>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="OpenEventButton">
            <BeginStoryboard Storyboard="{StaticResource OpenEvent}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseEventButton">
            <BeginStoryboard Storyboard="{StaticResource CloseEvent}"/>
        </EventTrigger>

    </Page.Triggers>

    <Grid Margin="80 20 10 20">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*" MinWidth="280"/>
            <ColumnDefinition Width="2*" MinWidth="280"/>
        </Grid.ColumnDefinitions>

        <!-- Left side -->
        <Border Grid.Column="0" BorderBrush="{StaticResource TertiaryColorBrush}" Background="{StaticResource LightColorBrush}" CornerRadius="5" BorderThickness="2" Margin="0 0 12 0">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" CornerRadius="3 3 0 0" Background="{StaticResource TertiaryColorBrush}" BorderBrush="{StaticResource PrimaryColorBrush}" BorderThickness="0 0 0 1">
                    <TextBlock Text="Events Today" FontWeight="Bold" FontFamily="/EventAssistant;component/Styles/#Open Sans" Padding="5 5 5 4" FontSize="20"/>
                </Border>
                
                <!-- Event buttons -->
                <Button Grid.Row="1" x:Name="OpenEventButton" Style="{StaticResource TextButton}" Content="+ Add new" Click="ButtonOpenMenu_Click"/>

                <Button Grid.Row="1" x:Name="CloseEventButton" Style="{StaticResource TextButton}" Content="- Close" Visibility="Collapsed" Click="ButtonCloseMenu_Click"/>
                
                <!-- Add new event -->
                <ScrollViewer Grid.Row="2" Padding="15 0" VerticalAlignment="Top" x:Name="AddStack" Visibility="Collapsed" >
                    <StackPanel>

                        <Label Content="Event Title" Padding="0" FontWeight="Bold" FontSize="18" Foreground="{StaticResource PrimaryColorBrush}"/>
                        <TextBox Text="{Binding EventModel.EventTitle}" materialDesign:HintAssist.Hint="Add Title" Height="35" Margin="0 0 0 15" />

                        <Label Content="Priority" Padding="0" FontWeight="Bold" FontSize="18" Foreground="{StaticResource PrimaryColorBrush}"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource enumValues}}" SelectedItem="{Binding EventModel.Priority}" Margin="0 0 0 15"/>

                        <Label Content="Time" Padding="0" FontWeight="Bold" FontSize="18" Foreground="{StaticResource PrimaryColorBrush}"/>
                        <materialDesign:TimePicker Text="{Binding EventModel.EventTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Select Time (Optional)" Margin="0 0 0 15" />

                        <Label Content="Date" Padding="0" FontWeight="Bold" FontSize="18" Foreground="{StaticResource PrimaryColorBrush}"/>
                        <DatePicker Text="{Binding EventModel.EventDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Height="35" Margin="0 0 0 15" FontSize="15" materialDesign:HintAssist.Hint="Select date"/>

                        <Label Content="Description" Padding="0" FontWeight="Bold" FontSize="18" Foreground="{StaticResource PrimaryColorBrush}"/>
                        <TextBox Text="{Binding EventModel.EventDescription}" materialDesign:HintAssist.Hint="Add description (optional)" MinHeight="35" Margin="0 0 0 15" Padding="3 0 0 0"
                                 TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" BorderThickness="2" MaxHeight="155"/>

                        <Label Content="Add Task (Optional)" Foreground="{StaticResource PrimaryColorBrush}" 
                               FontWeight="Bold" HorizontalAlignment="Left" Margin="0 0 0 5" Padding="5 0 0 0" FontSize="15"/>

                        <!-- Add tasks -->
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10 5 0 15">

                                <Button Style="{StaticResource NewTaskButton}" Margin="0 0 5 0" Command="{Binding DecreaseTaskCommand}">
                                    <materialDesign:PackIcon Kind="MinusBox" VerticalAlignment="Center" Width="20" Height="30"/>
                                </Button>

                                <Border BorderThickness="1" BorderBrush="{StaticResource PrimaryColorBrush}" CornerRadius="3" SnapsToDevicePixels="True" Padding="5 0 5 2" VerticalAlignment="Center">
                                    <TextBox Text="{Binding TaskNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsHitTestVisible="False" Style="{StaticResource TaskNumberBox}" MaxLength="2"/>
                                </Border>

                                    <Button Style="{StaticResource NewTaskButton}" Margin="5 0 0 0" Command="{Binding IncreaseTaskCommand}">
                                    <materialDesign:PackIcon Kind="PlusBox" VerticalAlignment="Center" Width="20" Height="30"/>
                                </Button>

                        </StackPanel>

                        <ItemsControl ItemsSource="{Binding TasksList}">

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10 0 10 25">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{Binding TaskIndex, StringFormat={}{0}.}" Margin="0 0 8 0" FontSize="15" VerticalAlignment="Center"/>
                                        <TextBox Grid.Column="1" Text="{Binding Description}" materialDesign:HintAssist.Hint="Task description">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding DataContext.IncreaseTaskCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>

                        <Button Content="Add Event" Width="150" Margin="0 0 0 10" Command="{Binding AddEventCommand}"/>

                    </StackPanel>
                </ScrollViewer>

                <!--Events Today -->
                <ListBox x:Name="TodayEvents" Grid.Row="2" ItemsSource="{Binding TodayEventsList}" HorizontalContentAlignment="Stretch" Padding="14 0 14 0"
                         ScrollViewer.CanContentScroll="False" SelectedItem="{Binding SelectedEvent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding LoadSelectedEventCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="ItemBorder" Style="{StaticResource EventsBorder}" RenderOptions.EdgeMode="Aliased">
                                <Grid Margin="10 5">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="{Binding CurrentEvent.Title}" FontWeight="Bold" TextTrimming="WordEllipsis"
                                                   FontSize="20" FontFamily="/EventAssistant;component/Styles/#Open Sans" />

                                    <Label Grid.Row="1" Grid.Column="0" Content="{Binding CurrentEvent.Date}" FontSize="16" HorizontalAlignment="Left"/>

                                    <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="10 0">
                                        <Label Content="{Binding CurrentEvent.Priority}" FontSize="16" Margin="0 0 20 0" FontWeight="Bold"/>
                                        <Button Padding="0" Style="{StaticResource EditButtons}" Margin="0 0 5 0" Command="{Binding DataContext.DirectDeleteCommand,
                                                RelativeSource={RelativeSource AncestorType=ListBox}}">
                                            <materialDesign:PackIcon Kind="Trash" Width="25" Height="30"/>
                                        </Button>
                                    </StackPanel>

                                </Grid>

                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </Grid>
        </Border>
        <GridSplitter BorderThickness="0 0 3 0" BorderBrush="OrangeRed" Height="60"/>

        <!-- Selected Event -->
        <local:EventDetails Grid.Column="1" DataContext="{Binding DetailsDataContext}"/>

    </Grid>

</Page>