<UserControl x:Class="EventAssistant.EventDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EventAssistant"
             xmlns:Converters="clr-namespace:EventAssistant.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xml:lang="en-IN"
             mc:Ignorable="d">
   
     <!-- Right side -->
    <Border Grid.Column="1" BorderBrush="{StaticResource TertiaryColorBrush}" CornerRadius="5" BorderThickness="2" Margin="10 0 0 0" Background="{StaticResource LightColorBrush}" >
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" CornerRadius="5 5 0 0" Background="{StaticResource TertiaryColorBrush}" Margin="0 -1 0 0" BorderBrush="{StaticResource PrimaryColorBrush}" BorderThickness="0 0 0 1">
                <TextBlock Text="Event Details" FontWeight="Bold" FontFamily="/EventAssistant;component/Styles/#Open Sans" Padding="5" FontSize="20"/>
            </Border>

            <StackPanel Grid.Row="1">

                <WrapPanel Margin="15 20 0 0">

                    <Button Style="{StaticResource EditButtons}" Margin="0 0 5 0" Command="{Binding CompleteEventCommand}" ToolTip="Complete event">
                        <materialDesign:PackIcon Kind="CheckAll" Width="25" Height="30"/>
                    </Button>

                    <Button Style="{StaticResource EditButtons}" Margin="0 0 5 0" Command="{Binding DeleteEventCommand}" ToolTip="Delete event">
                        <materialDesign:PackIcon Kind="Trash" Width="25" Height="30"/>
                    </Button>

                    <Button Style="{StaticResource EditButtons}" Command="{Binding EditEventCommand}" ToolTip="Edit event">
                        <materialDesign:PackIcon Kind="EventEdit" Width="25" Height="30"/>
                    </Button>

                    <Grid HorizontalAlignment="Center" Margin="20 0 0 0">
                        <Label Content="{Binding ProgressbarText}" HorizontalAlignment="Center" Panel.ZIndex="1" FontWeight="Bold" Visibility="{Binding ProgressbarSize, Converter={Converters:IntToVisibilityConverter}}"/>
                        <ProgressBar Minimum="0" Maximum="{Binding ProgressbarSize}" Width="200" Height="35" Panel.ZIndex="0" Value="{Binding ProgressbarValue}"
                                     Visibility="{Binding ProgressbarSize, Converter={Converters:IntToVisibilityConverter}}" Background="#c8e6c9" BorderBrush="#c8e6c9" Foreground="#43a047" Margin="1 0"/>
                    </Grid>

                </WrapPanel>

                <TextBox Text="{Binding SelectedEvent.CurrentEvent.Title, FallbackValue=Select an event}" materialDesign:HintAssist.Hint="Event title" FontSize="20" FontWeight="Bold" Margin="15 10 0 0" Style="{StaticResource EditableBox}" IsHitTestVisible="{Binding IsEditable}"/>

                <Grid Margin="10 5 0 0">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <Label Content="Date:"  HorizontalAlignment="Left" FontSize="18" FontWeight="Bold"/>
                        <Label Content="Priority:" HorizontalAlignment="Left" FontSize="18" FontWeight="Bold"/>
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <TextBox Text="{Binding SelectedEvent.CurrentEvent.Date, StringFormat='dd MMM yyyy hh:mm tt', FallbackValue=Today}" Style="{StaticResource EditableBox}" IsHitTestVisible="{Binding IsEditable}"/>
                        <TextBox Text="{Binding SelectedEvent.CurrentEvent.Priority, FallbackValue=Normal}" Style="{StaticResource EditableBox}" IsHitTestVisible="False"/>
                    </StackPanel>

                </Grid>

                <Border BorderBrush="{StaticResource PrimaryColorBrush}" BorderThickness="0 0 0 2" Margin="10 5 10 0">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="2" ShadowDepth="1" Color="{StaticResource TertiaryColor}"/>
                    </Border.Effect>
                </Border>

                <Border BorderBrush="{StaticResource SecondaryColorBrush}" Background="White" BorderThickness="2" CornerRadius="5" Margin="20 15 20 0" VerticalAlignment="Top">
                    <TextBox Text="{Binding SelectedEvent.CurrentEvent.Description}" Style="{StaticResource TaskBox}" MinHeight="70" Margin="0 0 0 15" Padding="8 8 0 0" IsHitTestVisible="{Binding IsEditable}"
                             TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" MaxHeight="155" BorderBrush="Transparent" VerticalContentAlignment="Top"/>
                </Border>

                <Label Content="Tasks" FontSize="18" Margin="10 5 0 0" FontWeight="Bold" HorizontalAlignment="Left"/>

                <Border BorderBrush="{StaticResource PrimaryColorBrush}" BorderThickness="0 0 0 2" Margin="10 0 10 0">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="2" ShadowDepth="1" Color="{StaticResource TertiaryColor}"/>
                    </Border.Effect>
                </Border>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10 5 0 15" Visibility="{Binding IsEditable, Converter={Converters:BoolToVisibilityConverter}}">

                    <Button Style="{StaticResource NewTaskButton}" Margin="0 0 5 0" Command="{Binding DecreaseSelectedTaskCommand}">
                        <materialDesign:PackIcon Kind="MinusBox" VerticalAlignment="Center" Width="20" Height="30"/>
                    </Button>

                    <Border BorderThickness="1" BorderBrush="{StaticResource PrimaryColorBrush}" CornerRadius="3" SnapsToDevicePixels="True" Padding="5 0 5 2" VerticalAlignment="Center">
                        <TextBox Text="{Binding TaskNumberSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TaskNumberBox}" MaxLength="2" IsHitTestVisible="False"/>
                    </Border>

                    <Button Style="{StaticResource NewTaskButton}" Margin="5 0 0 0" Command="{Binding IncreaseSelectedTaskCommand}">
                        <materialDesign:PackIcon Kind="PlusBox" VerticalAlignment="Center" Width="20" Height="30"/>
                    </Button>

                </StackPanel>

            </StackPanel>

            <ScrollViewer Grid.Row="2" Margin="20 15 20 15">
                <ItemsControl ItemsSource="{Binding TodayTasksList}" >

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Style="{StaticResource TaskHover}" Margin="0 0 0 10">
                                <CheckBox IsChecked="{Binding Completed}" Command="{Binding DataContext.CheckTaskCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding }" Margin="0 3 5 0"/>
                                <TextBox Text="{Binding Description}" materialDesign:HintAssist.Hint="TaskDescription" Style="{StaticResource TaskBox}"
                                         IsReadOnly="{Binding DataContext.IsEditable, RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={Converters:BoolInverterConverter}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>
            </ScrollViewer>

            <Button Grid.Row="3" Content="Edit Event" Width="150" Command="{Binding UpdateEventCommand}" Visibility="{Binding IsEditable, Converter={Converters:BoolToVisibilityConverter}}" Margin="0 0 0 10"/>

        </Grid>
    </Border>
</UserControl>
